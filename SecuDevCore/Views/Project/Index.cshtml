@using SecuDev.Models;
@using SecuDev.Helper;
@using X.PagedList.Mvc;
@using X.PagedList.Mvc.Core;
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    string nowDate = Utility.GetNowDate();

    string tree = ViewBag.tree;

    HttpContextAccessor _Ac = new HttpContextAccessor();
    int AuthorityLevel = Int32.Parse(_Ac.HttpContext.Session.GetString("AuthorityLevel"));
    string UID = _Ac.HttpContext.Session.GetString("UID");

}

<script>

    window.addEventListener('load', function() {

        var allElements = document.getElementsByTagName('*');

        Array.prototype.forEach.call(allElements, function(el) {

            var includePath = el.dataset.includePath;

            if (includePath) {
                var xhttp = new XMLHttpRequest();
                xhttp.onreadystatechange = function () {
                    if (this.readyState == 4 && this.status == 200) {
                        el.outerHTML = this.responseText;
                    }
            };

            xhttp.open('GET', includePath, true);
            xhttp.send();

            }
        });
    });

    $().ready(function(){
    
        fnCreateTree()


    })

    function fnCreateTree() { 

        $('#tree').html("");

        $('#tree').treeview({
            data: getTree(),
            levels: 1,
            expandIcon: 'fa-solid fa-plus',
            collapseIcon: 'fa-solid fa-minus',
            emptyIcon: 'fa-solid fa-caret-right',
            highlightSelected: false,
            onNodeSelected: function(event, data) {

                if(data.nodes == null) {

                    var LocationID = data.LocationID

                    fnOpenModal(LocationID)

                }
                else
                {
                    $('#tree').treeview('toggleNodeExpanded', [ data.nodeId, { silent: true } ]);
                }

            }
        });

    }

    function getTree() {

        var tree = @Html.Raw(tree)

        return tree;

    }

    function fnSearch()
    {

        const search = $("#search-node").val();

        $('#tree').treeview('search', [ search, {
            ignoreCase: true,     // case insensitive
            exactMatch: false,    // like or equals
            revealResults: true,  // reveal matching nodes
        }]);
    }

    function changeIframeUrl(url)
    {
        document.getElementById("IfProject").src = url;
    }

    function fnOpenModal(LocationID) {

        $("#IfProject").attr("src", "/Project/IfRead?LocationID=" + LocationID);

        $("#proj").modal('show')
    }
</script>

<div>
    <div id="search-area" class="d-flex mb-3">
        <div class="input-group input-group-sm flex-grow-1">
            <input id="search-node" type="text" class="form-control form-control-sm" placeholder="검색어 입력" ent="fnSearch()"/>
            <button type="button" class="btn btn-sm btn-border">
                <i class="fa-solid fa-magnifying-glass"></i>
            </button>
        </div>
    </div>
    <button type="button" onclick="fnCreateTree()" class="btn btn-sm btn-border me-1 ms-auto mb-2">
        <i class="fa-solid fa-plus me-1 text-success"></i>
        추가
    </button>
    <div id="tree"></div>

</div>

<div id="proj" class="modal fade">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h6>프로젝트 이름</h6>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">

                @* <div>
                    <h6>
                        프로젝트 진행률
                        <small class="float-end">프로젝트 진행중...</small>
                    </h6>
                    <div class="progress">
                        <div class="progress-bar progress-bar-striped progress-bar-animated bg-dark" style="width:70%">70%</div>
                    </div>
                </div>

                <hr /> *@

                <iframe id="IfProject">

                </iframe>

            </div>
        </div>
    </div>
</div>